
grammar = r"""
?start : expr*

?expr  : list
       | atribute
       | func
       | tag
       | atom

?list  : "fython" "(" (expr ",")* ")" -> lista

?atribute : "{" ("'" atom ":" atom "'" ",")+ "}" -> atributo

?func  : "[" list+ "]" -> funcao

?tag   :  "'" name+ "'" -> tag

?name  : STRING -> nome

?atom  : SYMBOL -> simbolo
       | name
      
// Terminais
SYMBOL  : /[-!$%^&*()_+|~=`{}\[\]:";'<>?,.\/ ]/
STRING    : /[a-zA-Z0-9 ]+/

%ignore /\s+/
%ignore /;[^\n]*/
"""

lark = Lark(grammar, start='expr')


"""
### Para teste ###
      src = """

fython (ola tudo, 'div' , {'class : nome',}, {'id : number',},) 

"""
print(lark.parse(src))
print()
print(lark.parse(src).pretty())

"""